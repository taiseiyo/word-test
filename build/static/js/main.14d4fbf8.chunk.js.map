{"version":3,"sources":["CheckBox.js","App.js","reportWebVitals.js","index.js"],"names":["CheckBox","props","state","check","checkChange","bind","event","console","log","target","checked","this","setState","name","type","className","onChange","Component","App","text","text_list","flag","color_flag","Array","length","fill","map","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6PAoCeA,E,kDAhCb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,OAAO,GAET,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBALF,E,wDAQPC,GACVC,QAAQC,IAAIF,EAAMG,OAAOC,UACI,IAAzBJ,EAAMG,OAAOC,QACfC,KAAKC,UAAS,SAACV,GAAD,MAAY,CAACC,OAAO,MAElCQ,KAAKC,UAAS,SAACV,GAAD,MAAY,CAACC,OAAO,Q,+BAKpC,OACE,8BACE,sBAAMU,KAAK,YAAX,SACE,uBACEC,KAAK,WACLC,UAAU,0BACVL,QAASC,KAAKT,MAAMC,MACpBa,SAAUL,KAAKP,sB,GA1BJa,aCwCRC,G,wDA5Bb,WAAYjB,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXiB,KAAMlB,EAAMmB,UACZC,MAAM,EAENC,WAAYC,MAAMtB,EAAMmB,UAAUI,QAAQC,MAAK,IANhC,E,qDAWjB,OACE,8BACE,qBAAKV,UAAU,YAAf,SACE,oBAAIA,UAAU,WAAd,SACGJ,KAAKT,MAAMiB,KAAKO,KAAI,SAACC,GAAD,OACnB,+BACE,8BAAMA,IACN,cAAC,EAAD,oB,GAnBEV,cCFHW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCEdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,CAAKnB,UAJO,CAAC,OAAQ,MAAO,QAAS,OAAQ,YAM/CoB,SAASC,eAAe,aAM1Bb,M","file":"static/js/main.14d4fbf8.chunk.js","sourcesContent":["import React, {Component} from \"react\";\nimport firebase from \"firebase/app\";\n\nclass CheckBox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      check: false,\n    };\n    this.checkChange = this.checkChange.bind(this);\n  }\n\n  checkChange(event) {\n    console.log(event.target.checked);\n    if (event.target.checked === true) {\n      this.setState((state) => ({check: true}));\n    } else {\n      this.setState((state) => ({check: false}));\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <form name=\"check_box\">\n          <input\n            type=\"checkbox\"\n            className=\"option-input02 checkbox\"\n            checked={this.state.check}\n            onChange={this.checkChange}\n          />\n        </form>\n      </div>\n    );\n  }\n}\nexport default CheckBox;\n","import React, {Component} from \"react\";\nimport firebase from \"firebase/app\";\nimport CheckBox from \"./CheckBox\";\nimport \"./App.css\";\n\n// const firebaseConfig = {\n//   apiKey: \"AIzaSyA_Bx8VfyUxO1twJQrZ9-u37fcNF3lwKrI\",\n//   authDomain: \"word-test-916dc.firebaseapp.com\",\n//   projectId: \"word-test-916dc\",\n//   storageBucket: \"word-test-916dc.appspot.com\",\n//   messagingSenderId: \"482569027636\",\n//   appId: \"1:482569027636:web:393808c6c616ab7f0e4a61\",\n// };\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: props.text_list,\n      flag: true,\n      // Manage this value with firebase\n      color_flag: Array(props.text_list.length).fill(false),\n    };\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"word_list\">\n          <ol className=\"ol_label\">\n            {this.state.text.map((value) => (\n              <li>\n                <div>{value}</div>\n                <CheckBox />\n              </li>\n            ))}\n          </ol>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\n// Manage this value with firebase\nlet text_list = [\"test\", \"red\", \"value\", \"blue\", \"word\"];\n\nReactDOM.render(\n  <React.StrictMode>\n    <App text_list={text_list} />\n  </React.StrictMode>,\n  document.getElementById(\"question\"),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}